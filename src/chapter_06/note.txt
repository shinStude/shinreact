Hook 이란??

원래 존재하는 어떤 기능에 마치 갈고리를 거는 것처럼 끼어 들어가 같이 수행되는 것을 의미

리액트의 훅도 마찬가지로 리액트의 state와 생명주기 기능에 갈고리를 걸어 원하는 시점에 정해진 함수를 실행하도록 만든것 



대표적이고 많이 사용됨 

useState() : state를 사용하기 위한 Hook 

예시로 아래 코드를 보자 

import React, { useState } from "react";

function Counter(props) {
	var count = 0;
    
    return (
    <div> 
    	<p> 총 {count}번 클릭했습니다. </p>
        <button onClick={() => count++}>
        클릭
        </button>
    </div>
 );
}
위의 코드에서 Counter 컴포넌트는 버튼을 클릭하면 카운트를 하나씩 증가시키고 현재 카운트를 보여주는 컴포넌트이다.

하지만 위 부분에는 재랜더링이 일어나지 않아 새로운 카운트 값이 화면에 표시되지 않게된다. 

이런 경우에 state를 사용해서 값이 바뀔 때마다 재랜더링 되도록 해야한다. 

이때 아래와 같이 사용한다.

const [변수명, set함수명] = uuseState(초깃값);


useState만큼 사용을 많이 하는 훅 

useEffect : 사이드 이펙트를 수행하기 위한 훅, 일반적으로 말하는 의도치않은 오류와 같은 뜻을 가지는것이 아닌 이펙트의 의미가 더 강함. 

useEffect는 클래스 컴포넌트에서 제공하는 생명주기 함수인 componentDidMount(), componentDidUpdate(), componentWillUnmount()와 동일한 기능을 하나로 통합해서 제공한다. 

useEffect의 사용법은 아래와 같다.

useEffect(이펙트 함수, 의존성 배열);
여기서 위존성 배열의 뜻은 배열 안에 있는 변수 중에 하나라도 값이 변경되었을때 이펙트 함수가 실행된다는 뜻이다. 



useMemo() : Memoized value를 리턴하는 훅 

